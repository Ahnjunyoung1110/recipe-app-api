
services:
  app: #실행시킬 앱
    build: 
      context: . #현재 디렉토리를 기준으로 docker 이미지 빌드드
      args:
        - DEV=true #빌드시에 전달할 parameter
    ports:
      - "8000:8000" #호스트의 포트 8000을 컨테이너 포트 8000에 매핑핑
    volumes:
      - ./app:/app #호스트의 ./app디렉토리를 컨테이너의 /app디렉토리에 연결
      #애플리케이션 컨테이너 시작시 실행할 명령어. 서버열기인듯
    command: >
      sh -c "python manage.py wait_for_db &&
       python manage.py migrate &&
       python manage.py runserver 0.0.0.0:8000"  
    environment: #컨테이너 내부에서 사용할 환경변수
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on: #먼저 db컨테이너가 실행되도록 설정정
      - db
  db:
    image: postgres:13-alpine #사용하는 이미지
    volumes: #dev-db-data라는 로컬(docker가 경로 지정)에 데이터를 저장
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
  
    
volumes: #외부 저장소 정의
  dev-db-data: 

